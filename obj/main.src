; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optspeed -noreduceopt -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\..\..\..\..\PIEMAN~1\DESKTOP\CECDEV\CC22\SRC\MAIN.C"
	.assume ADL=1
	SEGMENT BSS
_menuyes:
	DS	3
_menuoption:
	DS	3
	SEGMENT DATA
_textcolor:
	DW	230
	DB	0
_accentcolor:
	DW	64
	DB	0
_menucolor:
	DW	0
	DB	0
_submenucolor:
	DW	74
	DB	0
_transcolor:
	DW	248
	DB	0
_editweaponx:
	DW	90
	DB	0
_editweapony:
	DW	0
	DB	0
_editweaponsmallx:
	DW	75
	DB	0
_editweaponsmally:
	DW	150
	DB	0
_editscale:
	DW	6
	DB	0
_editscalep:
	DW	12
	DB	0
_editpx:
	DW	140
	DB	0
_editpy:
	DW	10
	DB	0
	SEGMENT BSS
_mapshift:
	DS	3
_mapstartx:
	DS	3
_mapstarty:
	DS	3
_x_offset:
	DS	3
_y_offset:
	DS	3
_tilemap:
	DS	18
	SEGMENT DATA
_setnumber:
	DW	0
	DB	0
_player_setup:
	DB	0
	DB	0
	DB	4
	DB	0
	DB	0
	DB	0
;    1	/*
;    2	 *--------------------------------------
;    3	 * Program Name:CC22 Dungeon
;    4	 * Author:Pieman7373
;    5	 * License:
;    6	 * Description:
;    7	 *--------------------------------------
;    8	*/
;    9	
;   10	/* Keep these headers */
;   11	#include <stdbool.h>
;   12	#include <stddef.h>
;   13	#include <stdint.h>
;   14	#include <tice.h>
;   15	
;   16	#include <math.h>
;   17	#include <setjmp.h>
;   18	#include <fileioc.h>
;   19	#include <stdio.h>
;   20	#include <stdlib.h>
;   21	#include <string.h>
;   22	#include <graphx.h>
;   23	#include <keypadc.h>
;   24	#include "menuandeditfunctions.h"
;   25	#include "maingameloop.h"
;   26	#include "collisiondetection.h"
;   27	
;   28	#include "gfx/dungeon.h"
;   29	#include "gfx/dungeon_gfx.h"
;   30	#include "gfx/tiles_gfx.h"
;   31	#include "gfx/tilemapdata.h"
;   32	
;   33	
;   34	
;   35	/* Put all your globals here */
;   36		int menuyes;
;   37		int menuoption;
;   38		int textcolor = (0xE6);
;   39		int accentcolor = (0x40);
;   40		int menucolor = (0x00);
;   41		int submenucolor = (0x4A);
;   42		int transcolor = (0xF8);
;   43		int editweaponx = 90;
;   44		int editweapony = 0;
;   45		int editweaponsmallx = 75;
;   46		int editweaponsmally = 150;
;   47		int editscale = 6;
;   48		int editscalep = 12;
;   49		int editpx = 140;
;   50		int editpy = 10;
;   51		
;   52		
;   53		int mapshift;
;   54		
;   55		//player is 5 away
;   56		int mapstartx;
;   57		//player is 4 away
;   58		int mapstarty;
;   59		
;   60		//for tilemap stuff
;   61	
;   62		#define TILE_WIDTH          32
;   63		#define TILE_HEIGHT         32
;   64	
;   65		#define TILEMAP_WIDTH       150
;   66		
;   67		#define TILEMAP_HEIGHT      95
;   68		
;   69		#define TILEMAP_DRAW_WIDTH  10
;   70		#define TILEMAP_DRAW_HEIGHT 7
;   71	
;   72		#define Y_OFFSET            0
;   73		#define X_OFFSET            0
;   74		
;   75		
;   76		unsigned int x_offset;
;   77		unsigned int y_offset;
;   78		
;   79		extern uint8_t *dungeon[56];
;   80		
;   81		extern uint8_t tilemap_map[];
;   82		gfx_tilemap_t tilemap;
;   83		
;   84		
;   85		
;   86		//0=naked, 1=leather, 2=chain, 3=steel, 4=dragon
;   87		signed int setnumber = 0;
;   88		
;   89		
;   90		/*
;   91		!!!!!!!!!!!!!!!!!!!!!!
;   92		!!!!!!!!!!!!!!!!!!!!!
;   93		RESET PLAYER STATS
;   94		!!!!!!!!!!!!!!!!!!!!
;   95		!!!!!!!!!!!!!!!!!!!!
;   96		*/
;   97		//{helmet,chestplate,boots,weapon,x,y}
;   98		uint8_t player_setup [6] = {0,0,4,0,0,0};
	SEGMENT CODE
;   99		
;  100	void main(void) {
_main:
;  101	
;  102		kb_key_t key;
;  103	
;  104	    /* Initialize the tilemap structure */
;  105		tilemap.map         = tilemap_map;
	LD	BC,_tilemap_map
	LD	(_tilemap),BC
;  106	    tilemap.tiles       = tileset_tiles;
	LD	BC,_tileset_tiles_data
	LD	(_tilemap+3),BC
;  107	    tilemap.type_width  = gfx_tile_32_pixel;
	LD	A,5
	LD	(_tilemap+10),A
;  108	    tilemap.type_height = gfx_tile_32_pixel;
	LD	(_tilemap+11),A
;  109	    tilemap.tile_height = TILE_HEIGHT;
	LD	A,32
	LD	(_tilemap+6),A
;  110	    tilemap.tile_width  = TILE_WIDTH;
	LD	(_tilemap+7),A
;  111	    tilemap.draw_height = TILEMAP_DRAW_HEIGHT;
	LD	A,7
	LD	(_tilemap+8),A
;  112	    tilemap.draw_width  = TILEMAP_DRAW_WIDTH;
	LD	A,10
	LD	(_tilemap+9),A
;  113	    tilemap.height      = TILEMAP_HEIGHT;
;  114	    tilemap.width       = TILEMAP_WIDTH;
;  115	    tilemap.y_loc       = Y_OFFSET;
;  116	    tilemap.x_loc       = X_OFFSET;
;  117		
;  118		
;  119		gfx_SetPalette(dungeon_gfx_pal, sizeof_dungeon_gfx_pal, 0);
	LD	BC,0
	PUSH	BC
	LD	A,95
	LD	BC,512
	PUSH	BC
	LD	(_tilemap+12),A
	LD	BC,_dungeon_gfx_pal
	PUSH	BC
	LD	A,150
	LD	(_tilemap+13),A
	XOR	A,A
	LD	(_tilemap+14),A
	LD	BC,0
	LD	(_tilemap+15),BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;  120		gfx_SetTransparentColor(transcolor);
	LD	A,(_transcolor)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetTransparentColor
	POP	BC
;  121		gfx_Begin();
	CALL	_gfx_Begin
;  122		kb_SetMode(3);
	LD	A,(16056320)
	AND	A,252
	OR	A,3
	LD	(16056320),A
;  123	
;  124		
;  125		do {
L_8:
;  126			
;  127			/*pick whether to continue or not*/
;  128			
;  129			mainmenu ();
	CALL	_mainmenu
;  130	
;  131			//menuyes comes from the mainmenu function
;  132			//menuyes chunk begin
;  133			if (menuyes == 1) {
	LD	BC,1
	LD	HL,(_menuyes)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_4
;  134				if (kb_Data[3] & kb_1) {
	LD	A,(16056342)
	AND	A,2
	JR	Z,L_4
;  135					loadsave();
	CALL	_loadsave
;  136					maingameloop();
	CALL	_maingameloop
;  137				}
;  138			}
L_4:
;  139			if (menuyes == 1) {
	LD	BC,1
	LD	HL,(_menuyes)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_7
;  140				if (kb_Data[4] & kb_2) {
	LD	A,(16056344)
	AND	A,2
	JR	Z,L_7
;  141					newgame();
	CALL	_newgame
;  142					maingameloop();
	CALL	_maingameloop
;  143				}
;  144			}
L_7:
;  145			if (menuyes == 1) {
	LD	BC,1
	LD	HL,(_menuyes)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_9
;  146				if (kb_Data[5] & kb_3) {
	LD	A,(16056346)
	AND	A,2
	JR	Z,L_9
;  147					options();
	CALL	_options
;  148				}
;  149			}
;  150			//menuyes chunk end
;  151		
;  152		
;  153		} while (!(kb_Data[6] & kb_Clear));
L_9:
	LD	A,(16056348)
	AND	A,64
	JR	Z,L_8
;  154		
;  155		gfx_End();
	CALL	_gfx_End
;  156	}
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_gfx_End                            IMPORT  -----   function
;_options                            IMPORT  -----   function
;_newgame                            IMPORT  -----   function
;_maingameloop                       IMPORT  -----   function
;_loadsave                           IMPORT  -----   function
;_menuyes                            STATIC      3   variable
;_mainmenu                           IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;_transcolor                         STATIC      3   variable
;_gfx_SetTransparentColor            IMPORT  -----   function
;_dungeon_gfx_pal                    IMPORT    512   variable
;_gfx_SetPalette                     IMPORT  -----   function
;_tileset_tiles_data                 IMPORT     81   variable
;_tilemap                            STATIC     18   variable
;_tilemap_map                        IMPORT  unknown variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


	XREF _tilemap_map:ROM
	XREF _tileset_tiles_data:ROM
	XREF _dungeon_gfx_pal:ROM
	XREF _maingameloop:ROM
	XREF _options:ROM
	XREF _loadsave:ROM
	XREF _newgame:ROM
	XREF _mainmenu:ROM
	XREF _gfx_SetPalette:ROM
	XREF _gfx_SetTransparentColor:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XDEF _main
	XDEF _player_setup
	XDEF _setnumber
	XDEF _tilemap
	XDEF _y_offset
	XDEF _x_offset
	XDEF _mapstarty
	XDEF _mapstartx
	XDEF _mapshift
	XDEF _editpy
	XDEF _editpx
	XDEF _editscalep
	XDEF _editscale
	XDEF _editweaponsmally
	XDEF _editweaponsmallx
	XDEF _editweapony
	XDEF _editweaponx
	XDEF _transcolor
	XDEF _submenucolor
	XDEF _menucolor
	XDEF _accentcolor
	XDEF _textcolor
	XDEF _menuoption
	XDEF _menuyes
	END
