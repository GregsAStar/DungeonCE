; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optspeed -noreduceopt -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\..\..\..\..\PIEMAN~1\DESKTOP\CECDEV\CC22\SRC\MAIN.C"
	.assume ADL=1
	SEGMENT BSS
_menuyes:
	DS	3
_menuoption:
	DS	3
	SEGMENT DATA
_textcolor:
	DW	230
	DB	0
_accentcolor:
	DW	64
	DB	0
_menucolor:
	DW	0
	DB	0
_submenucolor:
	DW	74
	DB	0
_transcolor:
	DW	248
	DB	0
_editweaponx:
	DW	90
	DB	0
_editweapony:
	DW	0
	DB	0
_editweaponsmallx:
	DW	75
	DB	0
_editweaponsmally:
	DW	150
	DB	0
_editscale:
	DW	6
	DB	0
_editscalep:
	DW	12
	DB	0
_editpx:
	DW	140
	DB	0
_editpy:
	DW	10
	DB	0
	SEGMENT BSS
_mapshift:
	DS	3
	SEGMENT DATA
_x_offset:
	DW	0
	DB	0
_y_offset:
	DW	0
	DB	0
	SEGMENT BSS
_tilemap:
	DS	18
	SEGMENT DATA
_setnumber:
	DW	0
	DB	0
_player_setup:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
;    1	/*
;    2	 *--------------------------------------
;    3	 * Program Name:CC22 Dungeon
;    4	 * Author:Pieman7373
;    5	 * License:
;    6	 * Description:
;    7	 *--------------------------------------
;    8	*/
;    9	
;   10	/* Keep these headers */
;   11	#include <stdbool.h>
;   12	#include <stddef.h>
;   13	#include <stdint.h>
;   14	#include <tice.h>
;   15	
;   16	#include <math.h>
;   17	#include <setjmp.h>
;   18	#include <fileioc.h>
;   19	#include <stdio.h>
;   20	#include <stdlib.h>
;   21	#include <string.h>
;   22	#include <graphx.h>
;   23	#include <keypadc.h>
;   24	#include "menuandeditfunctions.h"
;   25	#include "maingameloop.h"
;   26	#include "collisiondetection.h"
;   27	
;   28	#include "gfx/dungeon_gfx.h"
;   29	#include "gfx/tiles_gfx.h"
;   30	#include "gfx/tilemapdata.h"
;   31	
;   32	
;   33	
;   34	/* Put all your globals here */
;   35		int menuyes;
;   36		int menuoption;
;   37		int textcolor = (0xE6);
;   38		int accentcolor = (0x40);
;   39		int menucolor = (0x00);
;   40		int submenucolor = (0x4A);
;   41		int transcolor = (0xF8);
;   42		int editweaponx = 90;
;   43		int editweapony = 0;
;   44		int editweaponsmallx = 75;
;   45		int editweaponsmally = 150;
;   46		int editscale = 6;
;   47		int editscalep = 12;
;   48		int editpx = 140;
;   49		int editpy = 10;
;   50		
;   51		
;   52		int mapshift;
;   53		
;   54		//for tilemap stuff
;   55	
;   56		#define TILE_WIDTH          32
;   57		#define TILE_HEIGHT         32
;   58	
;   59		#define TILEMAP_WIDTH       100
;   60		
;   61		#define TILEMAP_HEIGHT      70
;   62		
;   63		#define TILEMAP_DRAW_WIDTH  10
;   64		#define TILEMAP_DRAW_HEIGHT 7
;   65	
;   66		#define Y_OFFSET            0
;   67		#define X_OFFSET            0
;   68		
;   69		
;   70		unsigned int x_offset = 0;
;   71		unsigned int y_offset = 0;
;   72		
;   73		extern uint8_t tilemap_map[];
;   74		gfx_tilemap_t tilemap;
;   75		
;   76		
;   77		
;   78		//0=naked, 1=leather, 2=chain, 3=steel, 4=dragon
;   79		signed int setnumber = 0;
;   80		
;   81		//{helmet,chestplate,boots,weapon,x,y,x offset,y offset}
;   82		uint8_t player_setup [8] = {0,0,0,0,0,0,0,0};
	SEGMENT CODE
;   83		
;   84	void main(void) {
_main:
;   85		
;   86		kb_key_t key;
;   87	
;   88	    /* Initialize the tilemap structure */
;   89		tilemap.map         = tilemap_map;
	LD	BC,_tilemap_map
	LD	(_tilemap),BC
;   90	    tilemap.tiles       = tileset_tiles;
	LD	BC,_tileset_tiles_data
	LD	(_tilemap+3),BC
;   91	    tilemap.type_width  = gfx_tile_32_pixel;
	LD	A,5
	LD	(_tilemap+10),A
;   92	    tilemap.type_height = gfx_tile_32_pixel;
	LD	(_tilemap+11),A
;   93	    tilemap.tile_height = TILE_HEIGHT;
	LD	A,32
	LD	(_tilemap+6),A
;   94	    tilemap.tile_width  = TILE_WIDTH;
	LD	(_tilemap+7),A
;   95	    tilemap.draw_height = TILEMAP_DRAW_HEIGHT;
	LD	A,7
	LD	(_tilemap+8),A
;   96	    tilemap.draw_width  = TILEMAP_DRAW_WIDTH;
	LD	A,10
	LD	(_tilemap+9),A
;   97	    tilemap.height      = TILEMAP_HEIGHT;
;   98	    tilemap.width       = TILEMAP_WIDTH;
;   99	    tilemap.y_loc       = Y_OFFSET;
;  100	    tilemap.x_loc       = X_OFFSET;
;  101		
;  102		
;  103		gfx_SetPalette(dungeon_gfx_pal, sizeof_dungeon_gfx_pal, 0);
	LD	BC,0
	PUSH	BC
	LD	A,70
	LD	BC,512
	PUSH	BC
	LD	(_tilemap+12),A
	LD	BC,_dungeon_gfx_pal
	PUSH	BC
	LD	A,100
	LD	(_tilemap+13),A
	XOR	A,A
	LD	(_tilemap+14),A
	LD	BC,0
	LD	(_tilemap+15),BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;  104		gfx_SetTransparentColor(transcolor);
	LD	A,(_transcolor)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetTransparentColor
	POP	BC
;  105		gfx_Begin();
	CALL	_gfx_Begin
;  106		kb_SetMode(3);
	LD	A,(16056320)
	AND	A,252
	OR	A,3
	LD	(16056320),A
;  107	
;  108		
;  109		do {
L_8:
;  110			
;  111			/*pick whether to continue or not*/
;  112			
;  113			mainmenu ();
	CALL	_mainmenu
;  114	
;  115			//menuyes comes from the mainmenu function
;  116			//menuyes chunk begin
;  117			if (menuyes == 1) {
;  118				if (kb_Data[3] & kb_1) {
;  119					
;  120				}
;  121			}
;  122			if (menuyes == 1) {
	LD	BC,1
	LD	HL,(_menuyes)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_7
;  123				if (kb_Data[4] & kb_2) {
	LD	A,(16056344)
	AND	A,2
	JR	Z,L_7
;  124					maingameloop();
	CALL	_maingameloop
;  125				}
;  126			}
L_7:
;  127			if (menuyes == 1) {
	LD	BC,1
	LD	HL,(_menuyes)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_9
;  128				if (kb_Data[5] & kb_3) {
	LD	A,(16056346)
	AND	A,2
	JR	Z,L_9
;  129					options();
	CALL	_options
;  130				}
;  131			}
;  132			//menuyes chunk end
;  133		
;  134		
;  135		} while (!(kb_Data[6] & kb_Clear));
L_9:
	LD	A,(16056348)
	AND	A,64
	JR	Z,L_8
;  136		
;  137		gfx_End();
	CALL	_gfx_End
;  138	}
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_gfx_End                            IMPORT  -----   function
;_options                            IMPORT  -----   function
;_maingameloop                       IMPORT  -----   function
;_menuyes                            STATIC      3   variable
;_mainmenu                           IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;_transcolor                         STATIC      3   variable
;_gfx_SetTransparentColor            IMPORT  -----   function
;_dungeon_gfx_pal                    IMPORT    512   variable
;_gfx_SetPalette                     IMPORT  -----   function
;_tileset_tiles_data                 IMPORT     81   variable
;_tilemap                            STATIC     18   variable
;_tilemap_map                        IMPORT  unknown variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


	XREF _tilemap_map:ROM
	XREF _tileset_tiles_data:ROM
	XREF _dungeon_gfx_pal:ROM
	XREF _maingameloop:ROM
	XREF _options:ROM
	XREF _mainmenu:ROM
	XREF _gfx_SetPalette:ROM
	XREF _gfx_SetTransparentColor:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XDEF _main
	XDEF _player_setup
	XDEF _setnumber
	XDEF _tilemap
	XDEF _y_offset
	XDEF _x_offset
	XDEF _mapshift
	XDEF _editpy
	XDEF _editpx
	XDEF _editscalep
	XDEF _editscale
	XDEF _editweaponsmally
	XDEF _editweaponsmallx
	XDEF _editweapony
	XDEF _editweaponx
	XDEF _transcolor
	XDEF _submenucolor
	XDEF _menucolor
	XDEF _accentcolor
	XDEF _textcolor
	XDEF _menuoption
	XDEF _menuyes
	END
