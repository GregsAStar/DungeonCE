; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optspeed -noreduceopt -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\..\..\..\..\PIEMAN~1\DESKTOP\CECDEV\CC22\SRC\MAINGAMELOOP.C"
	.assume ADL=1
	SEGMENT BSS
_goleft:
	DS	3
_goright:
	DS	3
_goup:
	DS	3
_godown:
	DS	3
	SEGMENT DATA
_spritexoffset:
	DW	160
	DB	0
_spriteyoffset:
	DW	128
	DB	0
_playerface:
	DW	2
	DB	0
_dumb:
	DW	0
	DB	0
;    1	#include "menuandeditfunctions.h"
;    2	#include "maingameloop.h"
;    3	#include "collisiondetection.h"
;    4	#include "gfx/dungeon_gfx.h"
;    5	#include "gfx/tiles_gfx.h"
;    6	#include "gfx/dungeon.h"
;    7	
;    8	#include <stdbool.h>
;    9	#include <stddef.h>
;   10	#include <stdint.h>
;   11	#include <tice.h>
;   12	
;   13	#include <math.h>
;   14	#include <setjmp.h>
;   15	#include <fileioc.h>
;   16	#include <stdio.h>
;   17	#include <stdlib.h>
;   18	#include <string.h>
;   19	#include <graphx.h>
;   20	#include <keypadc.h>
;   21	
;   22	int goleft;
;   23	int goright;
;   24	int goup;
;   25	int godown;
;   26	int spritexoffset = 160;
;   27	int spriteyoffset = 128;
;   28	//1=left,2=up,3=right,4=down
;   29	int playerface = 2;
;   30	int dumb = 0;
	SEGMENT CODE
;   31	
;   32	extern int menuyes;
;   33	extern int textcolor;
;   34	extern uint8_t tilemap_map[];
;   35	extern unsigned int x_offset;
;   36	extern unsigned int y_offset;
;   37	extern int mapstartx;
;   38	extern int mapstarty;
;   39	extern int mapshift;
;   40	extern uint8_t player_setup [];
;   41	
;   42	extern gfx_tilemap_t tilemap;
;   43	
;   44	void maingameloop(void){
_maingameloop:
;   45	x_offset = mapstartx * 32;
	LD	HL,(_mapstartx)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	(_x_offset),HL
;   46	y_offset = mapstarty * 32;
	LD	HL,(_mapstarty)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	(_y_offset),HL
;   47		do{
L_1:
;   48				
;   49			(goleft = 0);
	LD	BC,0
	LD	(_goleft),BC
;   50			(goright = 0);
	LD	(_goright),BC
;   51			(goup = 0);
	LD	(_goup),BC
;   52			(godown = 0);
	LD	(_godown),BC
;   53			
;   54			setmapshift();
	CALL	_setmapshift
;   55			
;   56			drawmap();
	CALL	_drawmap
;   57			drawcharacter();
	CALL	_drawcharacter
;   58			drawplayerattack();
	CALL	_drawplayerattack
;   59			mapshifter();
	CALL	_mapshifter
;   60		
;   61		} while (!((kb_Data[6] & kb_Clear)||(kb_Data[1] & kb_Yequ)));
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_3
	LD	A,(16056338)
	AND	A,16
	JR	Z,L_1
L_3:
;   62		menuyes = 3;
	LD	BC,3
	LD	(_menuyes),BC
;   63	}
	RET	


;**************************** _maingameloop ***************************
;Name                         Addr/Register   Size   Type
;_menuyes                            IMPORT      3   variable
;_mapshifter                         IMPORT  -----   function
;_drawplayerattack                   IMPORT  -----   function
;_drawcharacter                      IMPORT  -----   function
;_drawmap                            IMPORT  -----   function
;_setmapshift                        IMPORT  -----   function
;_godown                             STATIC      3   variable
;_goup                               STATIC      3   variable
;_goright                            STATIC      3   variable
;_goleft                             STATIC      3   variable
;_y_offset                           IMPORT      3   variable
;_mapstarty                          IMPORT      3   variable
;_x_offset                           IMPORT      3   variable
;_mapstartx                          IMPORT      3   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;   64	
;   65	
;   66	void setmapshift(void) {
_setmapshift:
;   67		if (player_setup[2] == 0) {(mapshift = 1);}
	LD	IY,_player_setup
	LD	A,(IY+2)
	OR	A,A
	JR	NZ,L_7
	LD	BC,1
	LD	(_mapshift),BC
L_7:
;   68		if (player_setup[2] == 1) {(mapshift = 8);}
	LD	HL,_player_setup+2
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	OR	A,A
	LD	BC,1
	SBC	HL,BC
	JR	NZ,L_9
	LD	BC,8
	LD	(_mapshift),BC
L_9:
;   69		if (player_setup[2] == 2) {(mapshift = 16);}
	LD	HL,_player_setup+2
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	OR	A,A
	LD	BC,2
	SBC	HL,BC
	JR	NZ,L_11
	LD	BC,16
	LD	(_mapshift),BC
L_11:
;   70		if (player_setup[2] == 3) {(mapshift = 24);}
	LD	HL,_player_setup+2
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	OR	A,A
	LD	BC,3
	SBC	HL,BC
	JR	NZ,L_13
	LD	BC,24
	LD	(_mapshift),BC
L_13:
;   71		if (player_setup[2] == 4) {(mapshift = 32);}
	LD	HL,_player_setup+2
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	OR	A,A
	LD	BC,4
	SBC	HL,BC
	JR	NZ,L_14
	LD	BC,32
	LD	(_mapshift),BC
;   72	}
L_14:
	RET	


;**************************** _setmapshift ***************************
;Name                         Addr/Register   Size   Type
;_mapshift                           IMPORT      3   variable
;_player_setup                       IMPORT  unknown variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;   73		
;   74	void drawmap(void) {
_drawmap:
;   75	
;   76		gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;   77		gfx_SetPalette(tiles_gfx_pal, sizeof_tiles_gfx_pal, 0);
	LD	BC,0
	PUSH	BC
	LD	BC,512
	PUSH	BC
	LD	BC,_tiles_gfx_pal
	PUSH	BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;   78		gfx_Tilemap(&tilemap, x_offset, y_offset);
	LD	BC,(_y_offset)
	PUSH	BC
	LD	BC,(_x_offset)
	PUSH	BC
	LD	BC,_tilemap
	PUSH	BC
	CALL	_gfx_Tilemap
	POP	BC
	POP	BC
	POP	BC
;   79		gfx_SetColor(0x00);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;   80		gfx_FillRectangle(0,224,320,16);
	LD	BC,16
	PUSH	BC
	LD	BC,320
	PUSH	BC
	LD	BC,224
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   81		gfx_SetTextFGColor(textcolor);
	LD	A,(_textcolor)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   82		gfx_PrintStringXY("x", 8, 224);
	LD	BC,224
	PUSH	BC
	LD	BC,8
	PUSH	BC
	LD	BC,L__9
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   83		gfx_PrintUInt(x_offset, 4);
	LD	BC,4
	PUSH	BC
	LD	BC,(_x_offset)
	PUSH	BC
	CALL	_gfx_PrintUInt
	POP	BC
	POP	BC
;   84		gfx_PrintString("  y");
	LD	BC,L__10
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
;   85		gfx_PrintUInt(y_offset, 4);
	LD	BC,4
	PUSH	BC
	LD	BC,(_y_offset)
	PUSH	BC
	CALL	_gfx_PrintUInt
	POP	BC
	POP	BC
;   86	}
	RET	


;**************************** _drawmap ***************************
;Name                         Addr/Register   Size   Type
;_gfx_PrintString                    IMPORT  -----   function
;_gfx_PrintUInt                      IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_textcolor                          IMPORT      3   variable
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_tilemap                            IMPORT     18   variable
;_x_offset                           IMPORT      3   variable
;_y_offset                           IMPORT      3   variable
;_gfx_Tilemap                        IMPORT  -----   function
;_tiles_gfx_pal                      IMPORT    512   variable
;_gfx_SetPalette                     IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__9:
	DB	"x"
	DB	0
L__10:
	DB	"  y"
	DB	0
	SEGMENT CODE
;   87	
;   88	void mapshifter(void) {
_mapshifter:
;   89		if (kb_Data[7] & kb_Left) {
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_23
;   90			collisionleft();
	CALL	_collisionleft
;   91			if (goleft == 1) {
	LD	BC,1
	LD	HL,(_goleft)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_23
;   92				(playerface = 1);
	LD	(_playerface),BC
;   93				if (x_offset  == 0) {
	LD	HL,(_x_offset)
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_17
;   94					(x_offset = 0);
	LD	(_x_offset),BC
;   95				}
;   96				else {
	JR	L_23
L_17:
;   97					(x_offset = (x_offset - mapshift));
	LD	HL,(_x_offset)
	LD	BC,(_mapshift)
	OR	A,A
	SBC	HL,BC
	LD	(_x_offset),HL
;   98				}
;   99			}
;  100		}
L_23:
;  101		if (kb_Data[7] & kb_Right) {
	LD	A,(16056350)
	AND	A,4
	JR	Z,L_27
;  102			collisionright();
	CALL	_collisionright
;  103			if (goright == 1){
	LD	BC,1
	LD	HL,(_goright)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_27
;  104				(playerface = 3);
	LD	BC,3
	LD	(_playerface),BC
;  105				(x_offset = (x_offset + mapshift));
	LD	BC,(_x_offset)
	LD	HL,(_mapshift)
	ADD	HL,BC
	LD	(_x_offset),HL
;  106				if (x_offset > 4480) { 
	LD	BC,(_x_offset)
	LD	HL,4480
	OR	A,A
	SBC	HL,BC
	JR	NC,L_27
;  107					(x_offset = (x_offset - mapshift));
	LD	HL,(_x_offset)
	LD	BC,(_mapshift)
	OR	A,A
	SBC	HL,BC
	LD	(_x_offset),HL
;  108				}
;  109	
;  110			}
;  111		}
L_27:
;  112		if (kb_Data[7] & kb_Up) {
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_31
;  113				collisionup();
	CALL	_collisionup
;  114				if (goup == 1){
	LD	BC,1
	LD	HL,(_goup)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_31
;  115					(playerface = 2);
	LD	BC,2
	LD	(_playerface),BC
;  116				(y_offset = (y_offset - mapshift));
	LD	HL,(_y_offset)
	LD	BC,(_mapshift)
	OR	A,A
	SBC	HL,BC
	LD	(_y_offset),HL
;  117				if (y_offset > 3105) {
	LD	BC,(_y_offset)
	LD	HL,3105
	OR	A,A
	SBC	HL,BC
	JR	NC,L_31
;  118					(y_offset = 0);
	LD	BC,0
	LD	(_y_offset),BC
;  119				}
;  120			}
;  121		}
L_31:
;  122		if (kb_Data[7] & kb_Down) {
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_32
;  123				collisiondown();
	CALL	_collisiondown
;  124				if (godown == 1){
	LD	BC,1
	LD	HL,(_godown)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_32
;  125					(playerface = 4);
	LD	BC,4
	LD	(_playerface),BC
;  126				(y_offset = (y_offset + mapshift));
	LD	BC,(_y_offset)
	LD	HL,(_mapshift)
	ADD	HL,BC
	LD	(_y_offset),HL
;  127				if (y_offset > 3104) {
	LD	BC,(_y_offset)
	LD	HL,3104
	OR	A,A
	SBC	HL,BC
	JR	NC,L_32
;  128					(y_offset =(y_offset - mapshift));
	LD	HL,(_y_offset)
	LD	BC,(_mapshift)
	OR	A,A
	SBC	HL,BC
	LD	(_y_offset),HL
;  129				}
;  130			}
;  131		}
;  132	}
L_32:
	RET	


;**************************** _mapshifter ***************************
;Name                         Addr/Register   Size   Type
;_godown                             STATIC      3   variable
;_collisiondown                      IMPORT  -----   function
;_y_offset                           IMPORT      3   variable
;_goup                               STATIC      3   variable
;_collisionup                        IMPORT  -----   function
;_goright                            STATIC      3   variable
;_collisionright                     IMPORT  -----   function
;_mapshift                           IMPORT      3   variable
;_x_offset                           IMPORT      3   variable
;_playerface                         STATIC      3   variable
;_goleft                             STATIC      3   variable
;_collisionleft                      IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  133	
;  134	void drawcharacter(void) {
_drawcharacter:
;  135		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_39
;  136			gfx_TransparentSprite(player_naked_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+6)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  137		}
;  138		else if (playerface == 2) {
	JR	L_40
L_39:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_37
;  139			gfx_TransparentSprite(player_naked_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+3)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  140		}
;  141		else if (playerface == 3) {
	JR	L_40
L_37:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_35
;  142			gfx_TransparentSprite(player_naked_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+9)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  143		}
;  144		else if (playerface == 4) {
	JR	L_40
L_35:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_40
;  145			gfx_TransparentSprite(player_naked_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,(_dungeon)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  146		}
L_40:
;  147	
;  148	drawhelmet();
	CALL	_drawhelmet
;  149	drawchestplate();
	CALL	_drawchestplate
;  150	drawboot();
	CALL	_drawboot
;  151	gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;  152	}
	RET	


;**************************** _drawcharacter ***************************
;Name                         Addr/Register   Size   Type
;_gfx_SwapDraw                       IMPORT  -----   function
;_drawboot                           IMPORT  -----   function
;_drawchestplate                     IMPORT  -----   function
;_drawhelmet                         IMPORT  -----   function
;_dungeon                            IMPORT    168   variable
;_spritexoffset                      STATIC      3   variable
;_x_offset                           IMPORT      3   variable
;_spriteyoffset                      STATIC      3   variable
;_y_offset                           IMPORT      3   variable
;_gfx_TransparentSprite              IMPORT  -----   function
;_playerface                         STATIC      3   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  153	
;  154	
;  155	
;  156	void drawhelmet(void) {
_drawhelmet:
;  157		if (player_setup[0] = 1){
	LD	A,1
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_75
;  158		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_48
;  159			gfx_TransparentSprite(leather_helmet_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+18)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  160		}
;  161		else if (playerface == 2) {
	JR	L_76
L_48:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_46
;  162			gfx_TransparentSprite(leather_helmet_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+15)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  163		}
;  164		else if (playerface == 3) {
	JR	L_76
L_46:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_44
;  165			gfx_TransparentSprite(leather_helmet_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+21)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  166		}
;  167		else if (playerface == 4) {
	JR	L_76
L_44:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_76
;  168			gfx_TransparentSprite(leather_helmet_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+12)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  169		}
;  170		}
;  171		else if (player_setup[0] = 2){
	JR	L_76
L_75:
	LD	A,2
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_73
;  172			if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_55
;  173			gfx_TransparentSprite(chain_helmet_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+30)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  174		}
;  175		else if (playerface == 2) {
	JR	L_76
L_55:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_53
;  176			gfx_TransparentSprite(chain_helmet_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+27)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  177		}
;  178		else if (playerface == 3) {
	JR	L_76
L_53:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_51
;  179			gfx_TransparentSprite(chain_helmet_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+33)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  180		}
;  181		else if (playerface == 4) {
	JR	L_76
L_51:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_76
;  182			gfx_TransparentSprite(chain_helmet_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+24)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  183		}
;  184		}
;  185		else if (player_setup[0] = 3){
	JR	L_76
L_73:
	LD	A,3
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_71
;  186			if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_62
;  187			gfx_TransparentSprite(steel_helmet_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+42)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  188		}
;  189		else if (playerface == 2) {
	JR	L_76
L_62:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_60
;  190			gfx_TransparentSprite(steel_helmet_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+39)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  191		}
;  192		else if (playerface == 3) {
	JR	L_76
L_60:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_58
;  193			gfx_TransparentSprite(steel_helmet_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+45)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  194		}
;  195		else if (playerface == 4) {
	JR	L_76
L_58:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_76
;  196			gfx_TransparentSprite(steel_helmet_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+36)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  197		}
;  198		}
;  199		else if (player_setup[0] = 4){
	JR	L_76
L_71:
	LD	A,4
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_69
;  200			gfx_TransparentSprite(dragon_helmet_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+54)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  201		}
;  202		else if (playerface == 2) {
	JR	L_76
L_69:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_67
;  203			gfx_TransparentSprite(dragon_helmet_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+51)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  204		}
;  205		else if (playerface == 3) {
	JR	L_76
L_67:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_65
;  206			gfx_TransparentSprite(dragon_helmet_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+57)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  207		}
;  208		else if (playerface == 4) {
	JR	L_76
L_65:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_76
;  209			gfx_TransparentSprite(dragon_helmet_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+48)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  210		}
;  211		}
L_76:
	RET	


;**************************** _drawhelmet ***************************
;Name                         Addr/Register   Size   Type
;_dungeon                            IMPORT    168   variable
;_spritexoffset                      STATIC      3   variable
;_x_offset                           IMPORT      3   variable
;_spriteyoffset                      STATIC      3   variable
;_y_offset                           IMPORT      3   variable
;_gfx_TransparentSprite              IMPORT  -----   function
;_playerface                         STATIC      3   variable
;_player_setup                       IMPORT  unknown variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  212	void drawchestplate(void) {
_drawchestplate:
;  213		if (player_setup[0] = 1){
	LD	A,1
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_111
;  214		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_83
;  215			gfx_TransparentSprite(leather_chestplate_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+66)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  216		}
;  217		else if (playerface == 2) {
	JR	L_112
L_83:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_81
;  218			gfx_TransparentSprite(leather_chestplate_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+63)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  219		}
;  220		else if (playerface == 3) {
	JR	L_112
L_81:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_79
;  221			gfx_TransparentSprite(leather_chestplate_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+69)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  222		}
;  223		else if (playerface == 4) {
	JR	L_112
L_79:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_112
;  224			gfx_TransparentSprite(leather_chestplate_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+60)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  225		}
;  226		}
;  227		else if (player_setup[0] = 2){
	JR	L_112
L_111:
	LD	A,2
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_109
;  228		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_90
;  229			gfx_TransparentSprite(chain_chestplate_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+78)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  230		}
;  231		else if (playerface == 2) {
	JR	L_112
L_90:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_88
;  232			gfx_TransparentSprite(chain_chestplate_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+75)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  233		}
;  234		else if (playerface == 3) {
	JR	L_112
L_88:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_86
;  235			gfx_TransparentSprite(chain_chestplate_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+81)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  236		}
;  237		else if (playerface == 4) {
	JR	L_112
L_86:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_112
;  238			gfx_TransparentSprite(chain_chestplate_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+72)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  239		}
;  240		}
;  241		else if (player_setup[0] = 3){
	JR	L_112
L_109:
	LD	A,3
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_107
;  242		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_97
;  243			gfx_TransparentSprite(steel_chestplate_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+90)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  244		}
;  245		else if (playerface == 2) {
	JR	L_112
L_97:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_95
;  246			gfx_TransparentSprite(steel_chestplate_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+87)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  247		}
;  248		else if (playerface == 3) {
	JR	L_112
L_95:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_93
;  249			gfx_TransparentSprite(steel_chestplate_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+93)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  250		}
;  251		else if (playerface == 4) {
	JR	L_112
L_93:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_112
;  252			gfx_TransparentSprite(steel_chestplate_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+84)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  253		}
;  254		}
;  255		else if (player_setup[0] = 4){
	JR	L_112
L_107:
	LD	A,4
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_112
;  256		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_104
;  257			gfx_TransparentSprite(dragon_chestplate_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+102)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  258		}
;  259		else if (playerface == 2) {
	JR	L_112
L_104:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_102
;  260			gfx_TransparentSprite(dragon_chestplate_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+99)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  261		}
;  262		else if (playerface == 3) {
	JR	L_112
L_102:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_100
;  263			gfx_TransparentSprite(dragon_chestplate_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+105)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  264		}
;  265		else if (playerface == 4) {
	JR	L_112
L_100:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_112
;  266			gfx_TransparentSprite(dragon_chestplate_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+96)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  267		}
;  268		}
;  269	}
L_112:
	RET	


;**************************** _drawchestplate ***************************
;Name                         Addr/Register   Size   Type
;_dungeon                            IMPORT    168   variable
;_spritexoffset                      STATIC      3   variable
;_x_offset                           IMPORT      3   variable
;_spriteyoffset                      STATIC      3   variable
;_y_offset                           IMPORT      3   variable
;_gfx_TransparentSprite              IMPORT  -----   function
;_playerface                         STATIC      3   variable
;_player_setup                       IMPORT  unknown variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  270	void drawboot(void) {
_drawboot:
;  271			if (player_setup[0] = 1){
	LD	A,1
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_147
;  272		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_119
;  273			gfx_TransparentSprite(leather_boots_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+114)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  274		}
;  275		else if (playerface == 2) {
	JR	L_148
L_119:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_117
;  276			gfx_TransparentSprite(leather_boots_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+111)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  277		}
;  278		else if (playerface == 3) {
	JR	L_148
L_117:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_115
;  279			gfx_TransparentSprite(leather_boots_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+117)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  280		}
;  281		else if (playerface == 4) {
	JR	L_148
L_115:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_148
;  282			gfx_TransparentSprite(leather_boots_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+108)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  283		}
;  284		}
;  285		else if (player_setup[0] = 2){
	JR	L_148
L_147:
	LD	A,2
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_145
;  286			if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_126
;  287			gfx_TransparentSprite(chain_boots_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+126)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  288		}
;  289		else if (playerface == 2) {
	JR	L_148
L_126:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_124
;  290			gfx_TransparentSprite(chain_boots_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+123)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  291		}
;  292		else if (playerface == 3) {
	JR	L_148
L_124:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_122
;  293			gfx_TransparentSprite(chain_boots_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_spriteyoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,(_x_offset)
	LD	BC,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,_dungeon
	LD	BC,129
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  294		}
;  295		else if (playerface == 4) {
	JR	L_148
L_122:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_148
;  296			gfx_TransparentSprite(chain_boots_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	LD	IY,_dungeon
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IY+120)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  297		}
;  298		}
;  299		else if (player_setup[0] = 3){
	JR	L_148
L_145:
	LD	A,3
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_143
;  300			if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_133
;  301			gfx_TransparentSprite(steel_boots_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_spriteyoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,(_x_offset)
	LD	BC,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,_dungeon
	LD	BC,138
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  302		}
;  303		else if (playerface == 2) {
	JR	L_148
L_133:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_131
;  304			gfx_TransparentSprite(steel_boots_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_spriteyoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,(_x_offset)
	LD	BC,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,_dungeon
	LD	BC,135
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  305		}
;  306		else if (playerface == 3) {
	JR	L_148
L_131:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_129
;  307			gfx_TransparentSprite(steel_boots_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_spriteyoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,(_x_offset)
	LD	BC,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,_dungeon
	LD	BC,141
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  308		}
;  309		else if (playerface == 4) {
	JR	L_148
L_129:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_148
;  310			gfx_TransparentSprite(steel_boots_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_spriteyoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,(_x_offset)
	LD	BC,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,_dungeon
	LD	BC,132
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  311		}
;  312		}
;  313		else if (player_setup[0] = 4){
	JR	L_148
L_143:
	LD	A,4
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_148
;  314		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_140
;  315			gfx_TransparentSprite(dragon_boots_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_spriteyoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,(_x_offset)
	LD	BC,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,_dungeon
	LD	BC,150
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  316		}
;  317		else if (playerface == 2) {
	JR	L_148
L_140:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_138
;  318			gfx_TransparentSprite(dragon_boots_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_spriteyoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,(_x_offset)
	LD	BC,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,_dungeon
	LD	BC,147
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  319		}
;  320		else if (playerface == 3) {
	JR	L_148
L_138:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_136
;  321			gfx_TransparentSprite(dragon_boots_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_spriteyoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,(_x_offset)
	LD	BC,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,_dungeon
	LD	BC,153
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  322		}
;  323		else if (playerface == 4) {
	JR	L_148
L_136:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_148
;  324			gfx_TransparentSprite(dragon_boots_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_spriteyoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,(_x_offset)
	LD	BC,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	HL,_dungeon
	LD	BC,144
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  325		}
;  326		}
;  327	}
L_148:
	RET	


;**************************** _drawboot ***************************
;Name                         Addr/Register   Size   Type
;_dungeon                            IMPORT    168   variable
;_spritexoffset                      STATIC      3   variable
;_x_offset                           IMPORT      3   variable
;_spriteyoffset                      STATIC      3   variable
;_y_offset                           IMPORT      3   variable
;_gfx_TransparentSprite              IMPORT  -----   function
;_playerface                         STATIC      3   variable
;_player_setup                       IMPORT  unknown variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  328	
;  329	void drawplayerattack(void){}
_drawplayerattack:
	RET	


;**************************** _drawplayerattack ***************************
;Name                         Addr/Register   Size   Type


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  330	void drawenemies(void){}
_drawenemies:
	RET	


;**************************** _drawenemies ***************************
;Name                         Addr/Register   Size   Type


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


	XREF _tilemap:ROM
	XREF _player_setup:ROM
	XREF _mapshift:ROM
	XREF _mapstarty:ROM
	XREF _mapstartx:ROM
	XREF _y_offset:ROM
	XREF _x_offset:ROM
	XREF _textcolor:ROM
	XREF _menuyes:ROM
	XREF _gfx_TransparentSprite:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_PrintString:ROM
	XREF _gfx_PrintUInt:ROM
	XREF _gfx_SwapDraw:ROM
	XREF _gfx_SetDraw:ROM
	XREF _gfx_FillRectangle:ROM
	XREF _gfx_SetPalette:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_Tilemap:ROM
	XREF _dungeon:ROM
	XREF _tiles_gfx_pal:ROM
	XREF _collisionright:ROM
	XREF _collisionleft:ROM
	XREF _collisiondown:ROM
	XREF _collisionup:ROM
	XREF __idivu:ROM
	XDEF _drawenemies
	XDEF _drawplayerattack
	XDEF _drawboot
	XDEF _drawchestplate
	XDEF _drawhelmet
	XDEF _drawcharacter
	XDEF _mapshifter
	XDEF _drawmap
	XDEF _setmapshift
	XDEF _maingameloop
	XDEF _dumb
	XDEF _playerface
	XDEF _spriteyoffset
	XDEF _spritexoffset
	XDEF _godown
	XDEF _goup
	XDEF _goright
	XDEF _goleft
	END
