; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optspeed -noreduceopt -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\..\..\..\..\PIEMAN~1\DESKTOP\CECDEV\CC22\SRC\MAINGAMELOOP.C"
	.assume ADL=1
	SEGMENT BSS
_goleft:
	DS	3
_goright:
	DS	3
_goup:
	DS	3
_godown:
	DS	3
	SEGMENT DATA
_spritexoffset:
	DW	160
	DB	0
_spriteyoffset:
	DW	128
	DB	0
_playerface:
	DW	2
	DB	0
_dumb:
	DW	0
	DB	0
;    1	#include "menuandeditfunctions.h"
;    2	#include "maingameloop.h"
;    3	#include "collisiondetection.h"
;    4	#include "gfx/dungeon_gfx.h"
;    5	#include "gfx/tiles_gfx.h"
;    6	
;    7	#include <stdbool.h>
;    8	#include <stddef.h>
;    9	#include <stdint.h>
;   10	#include <tice.h>
;   11	
;   12	#include <math.h>
;   13	#include <setjmp.h>
;   14	#include <fileioc.h>
;   15	#include <stdio.h>
;   16	#include <stdlib.h>
;   17	#include <string.h>
;   18	#include <graphx.h>
;   19	#include <keypadc.h>
;   20	
;   21	int goleft;
;   22	int goright;
;   23	int goup;
;   24	int godown;
;   25	int spritexoffset = 160;
;   26	int spriteyoffset = 128;
;   27	//1=left,2=up,3=right,4=down
;   28	int playerface = 2;
;   29	int dumb = 0;
	SEGMENT CODE
;   30	
;   31	extern int menuyes;
;   32	extern int textcolor;
;   33	extern uint8_t tilemap_map[];
;   34	extern unsigned int x_offset;
;   35	extern unsigned int y_offset;
;   36	extern int mapstartx;
;   37	extern int mapstarty;
;   38	extern int mapshift;
;   39	extern uint8_t player_setup [];
;   40	
;   41	extern gfx_tilemap_t tilemap;
;   42	
;   43	void maingameloop(void){
_maingameloop:
;   44	x_offset = mapstartx * 32;
	LD	HL,(_mapstartx)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	(_x_offset),HL
;   45	y_offset = mapstarty * 32;
	LD	HL,(_mapstarty)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	(_y_offset),HL
;   46		do{
L_1:
;   47				
;   48			(goleft = 0);
	LD	BC,0
	LD	(_goleft),BC
;   49			(goright = 0);
	LD	(_goright),BC
;   50			(goup = 0);
	LD	(_goup),BC
;   51			(godown = 0);
	LD	(_godown),BC
;   52			
;   53			setmapshift();
	CALL	_setmapshift
;   54			
;   55			drawmap();
	CALL	_drawmap
;   56			drawcharacter();
	CALL	_drawcharacter
;   57			drawplayerattack();
	CALL	_drawplayerattack
;   58			mapshifter();
	CALL	_mapshifter
;   59		
;   60		} while (!((kb_Data[6] & kb_Clear)||(kb_Data[1] & kb_Yequ)));
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_3
	LD	A,(16056338)
	AND	A,16
	JR	Z,L_1
L_3:
;   61		menuyes = 3;
	LD	BC,3
	LD	(_menuyes),BC
;   62	}
	RET	


;**************************** _maingameloop ***************************
;Name                         Addr/Register   Size   Type
;_menuyes                            IMPORT      3   variable
;_mapshifter                         IMPORT  -----   function
;_drawplayerattack                   IMPORT  -----   function
;_drawcharacter                      IMPORT  -----   function
;_drawmap                            IMPORT  -----   function
;_setmapshift                        IMPORT  -----   function
;_godown                             STATIC      3   variable
;_goup                               STATIC      3   variable
;_goright                            STATIC      3   variable
;_goleft                             STATIC      3   variable
;_y_offset                           IMPORT      3   variable
;_mapstarty                          IMPORT      3   variable
;_x_offset                           IMPORT      3   variable
;_mapstartx                          IMPORT      3   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;   63	
;   64	
;   65	void setmapshift(void) {
_setmapshift:
;   66		if (player_setup[2] == 0) {(mapshift = 1);}
	LD	IY,_player_setup
	LD	A,(IY+2)
	OR	A,A
	JR	NZ,L_7
	LD	BC,1
	LD	(_mapshift),BC
L_7:
;   67		if (player_setup[2] == 1) {(mapshift = 8);}
	LD	HL,_player_setup+2
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	OR	A,A
	LD	BC,1
	SBC	HL,BC
	JR	NZ,L_9
	LD	BC,8
	LD	(_mapshift),BC
L_9:
;   68		if (player_setup[2] == 2) {(mapshift = 16);}
	LD	HL,_player_setup+2
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	OR	A,A
	LD	BC,2
	SBC	HL,BC
	JR	NZ,L_11
	LD	BC,16
	LD	(_mapshift),BC
L_11:
;   69		if (player_setup[2] == 3) {(mapshift = 24);}
	LD	HL,_player_setup+2
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	OR	A,A
	LD	BC,3
	SBC	HL,BC
	JR	NZ,L_13
	LD	BC,24
	LD	(_mapshift),BC
L_13:
;   70		if (player_setup[2] == 4) {(mapshift = 32);}
	LD	HL,_player_setup+2
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	OR	A,A
	LD	BC,4
	SBC	HL,BC
	JR	NZ,L_14
	LD	BC,32
	LD	(_mapshift),BC
;   71	}
L_14:
	RET	


;**************************** _setmapshift ***************************
;Name                         Addr/Register   Size   Type
;_mapshift                           IMPORT      3   variable
;_player_setup                       IMPORT  unknown variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;   72		
;   73	void drawmap(void) {
_drawmap:
;   74	
;   75		gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;   76		gfx_SetPalette(tiles_gfx_pal, sizeof_tiles_gfx_pal, 0);
	LD	BC,0
	PUSH	BC
	LD	BC,512
	PUSH	BC
	LD	BC,_tiles_gfx_pal
	PUSH	BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;   77		gfx_Tilemap(&tilemap, x_offset, y_offset);
	LD	BC,(_y_offset)
	PUSH	BC
	LD	BC,(_x_offset)
	PUSH	BC
	LD	BC,_tilemap
	PUSH	BC
	CALL	_gfx_Tilemap
	POP	BC
	POP	BC
	POP	BC
;   78		gfx_SetColor(0x00);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;   79		gfx_FillRectangle(0,224,320,16);
	LD	BC,16
	PUSH	BC
	LD	BC,320
	PUSH	BC
	LD	BC,224
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   80		gfx_SetTextFGColor(textcolor);
	LD	A,(_textcolor)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   81		gfx_PrintStringXY("x", 8, 224);
	LD	BC,224
	PUSH	BC
	LD	BC,8
	PUSH	BC
	LD	BC,L__9
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   82		gfx_PrintUInt(x_offset, 4);
	LD	BC,4
	PUSH	BC
	LD	BC,(_x_offset)
	PUSH	BC
	CALL	_gfx_PrintUInt
	POP	BC
	POP	BC
;   83		gfx_PrintString("  y");
	LD	BC,L__10
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
;   84		gfx_PrintUInt(y_offset, 4);
	LD	BC,4
	PUSH	BC
	LD	BC,(_y_offset)
	PUSH	BC
	CALL	_gfx_PrintUInt
	POP	BC
	POP	BC
;   85	}
	RET	


;**************************** _drawmap ***************************
;Name                         Addr/Register   Size   Type
;_gfx_PrintString                    IMPORT  -----   function
;_gfx_PrintUInt                      IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_textcolor                          IMPORT      3   variable
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_tilemap                            IMPORT     18   variable
;_x_offset                           IMPORT      3   variable
;_y_offset                           IMPORT      3   variable
;_gfx_Tilemap                        IMPORT  -----   function
;_tiles_gfx_pal                      IMPORT    512   variable
;_gfx_SetPalette                     IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__9:
	DB	"x"
	DB	0
L__10:
	DB	"  y"
	DB	0
	SEGMENT CODE
;   86	
;   87	void mapshifter(void) {
_mapshifter:
;   88		if (kb_Data[7] & kb_Left) {
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_23
;   89			collisionleft();
	CALL	_collisionleft
;   90			if (goleft == 1) {
	LD	BC,1
	LD	HL,(_goleft)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_23
;   91				(playerface = 1);
	LD	(_playerface),BC
;   92				if (x_offset  == 0) {
	LD	HL,(_x_offset)
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_17
;   93					(x_offset = 0);
	LD	(_x_offset),BC
;   94				}
;   95				else {
	JR	L_23
L_17:
;   96					(x_offset = (x_offset - mapshift));
	LD	HL,(_x_offset)
	LD	BC,(_mapshift)
	OR	A,A
	SBC	HL,BC
	LD	(_x_offset),HL
;   97				}
;   98			}
;   99		}
L_23:
;  100		if (kb_Data[7] & kb_Right) {
	LD	A,(16056350)
	AND	A,4
	JR	Z,L_27
;  101			collisionright();
	CALL	_collisionright
;  102			if (goright == 1){
	LD	BC,1
	LD	HL,(_goright)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_27
;  103				(playerface = 3);
	LD	BC,3
	LD	(_playerface),BC
;  104				(x_offset = (x_offset + mapshift));
	LD	BC,(_x_offset)
	LD	HL,(_mapshift)
	ADD	HL,BC
	LD	(_x_offset),HL
;  105				if (x_offset > 4480) { 
	LD	BC,(_x_offset)
	LD	HL,4480
	OR	A,A
	SBC	HL,BC
	JR	NC,L_27
;  106					(x_offset = (x_offset - mapshift));
	LD	HL,(_x_offset)
	LD	BC,(_mapshift)
	OR	A,A
	SBC	HL,BC
	LD	(_x_offset),HL
;  107				}
;  108	
;  109			}
;  110		}
L_27:
;  111		if (kb_Data[7] & kb_Up) {
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_31
;  112				collisionup();
	CALL	_collisionup
;  113				if (goup == 1){
	LD	BC,1
	LD	HL,(_goup)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_31
;  114					(playerface = 2);
	LD	BC,2
	LD	(_playerface),BC
;  115				(y_offset = (y_offset - mapshift));
	LD	HL,(_y_offset)
	LD	BC,(_mapshift)
	OR	A,A
	SBC	HL,BC
	LD	(_y_offset),HL
;  116				if (y_offset > 3105) {
	LD	BC,(_y_offset)
	LD	HL,3105
	OR	A,A
	SBC	HL,BC
	JR	NC,L_31
;  117					(y_offset = 0);
	LD	BC,0
	LD	(_y_offset),BC
;  118				}
;  119			}
;  120		}
L_31:
;  121		if (kb_Data[7] & kb_Down) {
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_32
;  122				collisiondown();
	CALL	_collisiondown
;  123				if (godown == 1){
	LD	BC,1
	LD	HL,(_godown)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_32
;  124					(playerface = 4);
	LD	BC,4
	LD	(_playerface),BC
;  125				(y_offset = (y_offset + mapshift));
	LD	BC,(_y_offset)
	LD	HL,(_mapshift)
	ADD	HL,BC
	LD	(_y_offset),HL
;  126				if (y_offset > 3104) {
	LD	BC,(_y_offset)
	LD	HL,3104
	OR	A,A
	SBC	HL,BC
	JR	NC,L_32
;  127					(y_offset =(y_offset - mapshift));
	LD	HL,(_y_offset)
	LD	BC,(_mapshift)
	OR	A,A
	SBC	HL,BC
	LD	(_y_offset),HL
;  128				}
;  129			}
;  130		}
;  131	}
L_32:
	RET	


;**************************** _mapshifter ***************************
;Name                         Addr/Register   Size   Type
;_godown                             STATIC      3   variable
;_collisiondown                      IMPORT  -----   function
;_y_offset                           IMPORT      3   variable
;_goup                               STATIC      3   variable
;_collisionup                        IMPORT  -----   function
;_goright                            STATIC      3   variable
;_collisionright                     IMPORT  -----   function
;_mapshift                           IMPORT      3   variable
;_x_offset                           IMPORT      3   variable
;_playerface                         STATIC      3   variable
;_goleft                             STATIC      3   variable
;_collisionleft                      IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  132	
;  133	void drawcharacter(void) {
_drawcharacter:
;  134		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_39
;  135			gfx_TransparentSprite(player_naked_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_player_naked_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  136		}
;  137		else if (playerface == 2) {
	JR	L_40
L_39:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_37
;  138			gfx_TransparentSprite(player_naked_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_player_naked_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  139		}
;  140		else if (playerface == 3) {
	JR	L_40
L_37:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_35
;  141			gfx_TransparentSprite(player_naked_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_player_naked_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  142		}
;  143		else if (playerface == 4) {
	JR	L_40
L_35:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_40
;  144			gfx_TransparentSprite(player_naked_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_player_naked_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  145		}
L_40:
;  146	
;  147	drawhelmet();
	CALL	_drawhelmet
;  148	drawchestplate();
	CALL	_drawchestplate
;  149	drawboot();
	CALL	_drawboot
;  150	gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;  151	}
	RET	


;**************************** _drawcharacter ***************************
;Name                         Addr/Register   Size   Type
;_gfx_SwapDraw                       IMPORT  -----   function
;_drawboot                           IMPORT  -----   function
;_drawchestplate                     IMPORT  -----   function
;_drawhelmet                         IMPORT  -----   function
;_player_naked_down_data             IMPORT   1026   variable
;_player_naked_right_data            IMPORT   1026   variable
;_player_naked_up_data               IMPORT   1026   variable
;_player_naked_left_data             IMPORT   1026   variable
;_spritexoffset                      STATIC      3   variable
;_x_offset                           IMPORT      3   variable
;_spriteyoffset                      STATIC      3   variable
;_y_offset                           IMPORT      3   variable
;_gfx_TransparentSprite              IMPORT  -----   function
;_playerface                         STATIC      3   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  152	
;  153	
;  154	
;  155	void drawhelmet(void) {
_drawhelmet:
;  156		if (player_setup[0] = 1){
	LD	A,1
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_75
;  157		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_48
;  158			gfx_TransparentSprite(leather_helmet_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_leather_helmet_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  159		}
;  160		else if (playerface == 2) {
	JR	L_76
L_48:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_46
;  161			gfx_TransparentSprite(leather_helmet_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_leather_helmet_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  162		}
;  163		else if (playerface == 3) {
	JR	L_76
L_46:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_44
;  164			gfx_TransparentSprite(leather_helmet_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_leather_helmet_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  165		}
;  166		else if (playerface == 4) {
	JR	L_76
L_44:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_76
;  167			gfx_TransparentSprite(leather_helmet_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_leather_helmet_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  168		}
;  169		}
;  170		else if (player_setup[0] = 2){
	JR	L_76
L_75:
	LD	A,2
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_73
;  171			if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_55
;  172			gfx_TransparentSprite(chain_helmet_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_chain_helmet_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  173		}
;  174		else if (playerface == 2) {
	JR	L_76
L_55:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_53
;  175			gfx_TransparentSprite(chain_helmet_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_chain_helmet_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  176		}
;  177		else if (playerface == 3) {
	JR	L_76
L_53:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_51
;  178			gfx_TransparentSprite(chain_helmet_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_chain_helmet_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  179		}
;  180		else if (playerface == 4) {
	JR	L_76
L_51:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_76
;  181			gfx_TransparentSprite(chain_helmet_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_chain_helmet_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  182		}
;  183		}
;  184		else if (player_setup[0] = 3){
	JR	L_76
L_73:
	LD	A,3
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_71
;  185			if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_62
;  186			gfx_TransparentSprite(steel_helmet_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_steel_helmet_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  187		}
;  188		else if (playerface == 2) {
	JR	L_76
L_62:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_60
;  189			gfx_TransparentSprite(steel_helmet_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_steel_helmet_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  190		}
;  191		else if (playerface == 3) {
	JR	L_76
L_60:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_58
;  192			gfx_TransparentSprite(steel_helmet_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_steel_helmet_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  193		}
;  194		else if (playerface == 4) {
	JR	L_76
L_58:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_76
;  195			gfx_TransparentSprite(steel_helmet_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_steel_helmet_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  196		}
;  197		}
;  198		else if (player_setup[0] = 4){
	JR	L_76
L_71:
	LD	A,4
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_69
;  199			gfx_TransparentSprite(dragon_helmet_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_dragon_helmet_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  200		}
;  201		else if (playerface == 2) {
	JR	L_76
L_69:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_67
;  202			gfx_TransparentSprite(dragon_helmet_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_dragon_helmet_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  203		}
;  204		else if (playerface == 3) {
	JR	L_76
L_67:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_65
;  205			gfx_TransparentSprite(dragon_helmet_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_dragon_helmet_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  206		}
;  207		else if (playerface == 4) {
	JR	L_76
L_65:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_76
;  208			gfx_TransparentSprite(dragon_helmet_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_dragon_helmet_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  209		}
;  210		}
L_76:
	RET	


;**************************** _drawhelmet ***************************
;Name                         Addr/Register   Size   Type
;_dragon_helmet_down_data            IMPORT   1026   variable
;_dragon_helmet_right_data           IMPORT   1026   variable
;_dragon_helmet_up_data              IMPORT   1026   variable
;_dragon_helmet_left_data            IMPORT   1026   variable
;_steel_helmet_down_data             IMPORT   1026   variable
;_steel_helmet_right_data            IMPORT   1026   variable
;_steel_helmet_up_data               IMPORT   1026   variable
;_steel_helmet_left_data             IMPORT   1026   variable
;_chain_helmet_down_data             IMPORT   1026   variable
;_chain_helmet_right_data            IMPORT   1026   variable
;_chain_helmet_up_data               IMPORT   1026   variable
;_chain_helmet_left_data             IMPORT   1026   variable
;_leather_helmet_down_data           IMPORT   1026   variable
;_leather_helmet_right_data          IMPORT   1026   variable
;_leather_helmet_up_data             IMPORT   1026   variable
;_leather_helmet_left_data           IMPORT   1026   variable
;_spritexoffset                      STATIC      3   variable
;_x_offset                           IMPORT      3   variable
;_spriteyoffset                      STATIC      3   variable
;_y_offset                           IMPORT      3   variable
;_gfx_TransparentSprite              IMPORT  -----   function
;_playerface                         STATIC      3   variable
;_player_setup                       IMPORT  unknown variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  211	void drawchestplate(void) {
_drawchestplate:
;  212		if (player_setup[0] = 1){
	LD	A,1
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_111
;  213		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_83
;  214			gfx_TransparentSprite(leather_chestplate_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_leather_chestplate_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  215		}
;  216		else if (playerface == 2) {
	JR	L_112
L_83:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_81
;  217			gfx_TransparentSprite(leather_chestplate_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_leather_chestplate_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  218		}
;  219		else if (playerface == 3) {
	JR	L_112
L_81:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_79
;  220			gfx_TransparentSprite(leather_chestplate_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_leather_chestplate_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  221		}
;  222		else if (playerface == 4) {
	JR	L_112
L_79:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_112
;  223			gfx_TransparentSprite(leather_chestplate_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_leather_chestplate_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  224		}
;  225		}
;  226		else if (player_setup[0] = 2){
	JR	L_112
L_111:
	LD	A,2
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_109
;  227		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_90
;  228			gfx_TransparentSprite(chain_chestplate_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_chain_chestplate_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  229		}
;  230		else if (playerface == 2) {
	JR	L_112
L_90:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_88
;  231			gfx_TransparentSprite(chain_chestplate_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_chain_chestplate_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  232		}
;  233		else if (playerface == 3) {
	JR	L_112
L_88:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_86
;  234			gfx_TransparentSprite(chain_chestplate_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_chain_chestplate_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  235		}
;  236		else if (playerface == 4) {
	JR	L_112
L_86:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_112
;  237			gfx_TransparentSprite(chain_chestplate_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_chain_chestplate_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  238		}
;  239		}
;  240		else if (player_setup[0] = 3){
	JR	L_112
L_109:
	LD	A,3
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_107
;  241		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_97
;  242			gfx_TransparentSprite(steel_chestplate_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_steel_chestplate_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  243		}
;  244		else if (playerface == 2) {
	JR	L_112
L_97:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_95
;  245			gfx_TransparentSprite(steel_chestplate_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_steel_chestplate_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  246		}
;  247		else if (playerface == 3) {
	JR	L_112
L_95:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_93
;  248			gfx_TransparentSprite(steel_chestplate_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_steel_chestplate_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  249		}
;  250		else if (playerface == 4) {
	JR	L_112
L_93:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_112
;  251			gfx_TransparentSprite(steel_chestplate_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_steel_chestplate_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  252		}
;  253		}
;  254		else if (player_setup[0] = 4){
	JR	L_112
L_107:
	LD	A,4
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_112
;  255		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_104
;  256			gfx_TransparentSprite(dragon_chestplate_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_dragon_chestplate_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  257		}
;  258		else if (playerface == 2) {
	JR	L_112
L_104:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_102
;  259			gfx_TransparentSprite(dragon_chestplate_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_dragon_chestplate_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  260		}
;  261		else if (playerface == 3) {
	JR	L_112
L_102:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_100
;  262			gfx_TransparentSprite(dragon_chestplate_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_dragon_chestplate_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  263		}
;  264		else if (playerface == 4) {
	JR	L_112
L_100:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_112
;  265			gfx_TransparentSprite(dragon_chestplate_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_dragon_chestplate_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  266		}
;  267		}
;  268	}
L_112:
	RET	


;**************************** _drawchestplate ***************************
;Name                         Addr/Register   Size   Type
;_dragon_chestplate_down_data        IMPORT   1026   variable
;_dragon_chestplate_right_data       IMPORT   1026   variable
;_dragon_chestplate_up_data          IMPORT   1026   variable
;_dragon_chestplate_left_data        IMPORT   1026   variable
;_steel_chestplate_down_data         IMPORT   1026   variable
;_steel_chestplate_right_data        IMPORT   1026   variable
;_steel_chestplate_up_data           IMPORT   1026   variable
;_steel_chestplate_left_data         IMPORT   1026   variable
;_chain_chestplate_down_data         IMPORT   1026   variable
;_chain_chestplate_right_data        IMPORT   1026   variable
;_chain_chestplate_up_data           IMPORT   1026   variable
;_chain_chestplate_left_data         IMPORT   1026   variable
;_leather_chestplate_down_data       IMPORT   1026   variable
;_leather_chestplate_right_data      IMPORT   1026   variable
;_leather_chestplate_up_data         IMPORT   1026   variable
;_leather_chestplate_left_data       IMPORT   1026   variable
;_spritexoffset                      STATIC      3   variable
;_x_offset                           IMPORT      3   variable
;_spriteyoffset                      STATIC      3   variable
;_y_offset                           IMPORT      3   variable
;_gfx_TransparentSprite              IMPORT  -----   function
;_playerface                         STATIC      3   variable
;_player_setup                       IMPORT  unknown variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  269	void drawboot(void) {
_drawboot:
;  270			if (player_setup[0] = 1){
	LD	A,1
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_147
;  271		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_119
;  272			gfx_TransparentSprite(leather_boots_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_leather_boots_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  273		}
;  274		else if (playerface == 2) {
	JR	L_148
L_119:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_117
;  275			gfx_TransparentSprite(leather_boots_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_leather_boots_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  276		}
;  277		else if (playerface == 3) {
	JR	L_148
L_117:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_115
;  278			gfx_TransparentSprite(leather_boots_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_leather_boots_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  279		}
;  280		else if (playerface == 4) {
	JR	L_148
L_115:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_148
;  281			gfx_TransparentSprite(leather_boots_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_leather_boots_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  282		}
;  283		}
;  284		else if (player_setup[0] = 2){
	JR	L_148
L_147:
	LD	A,2
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_145
;  285			if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_126
;  286			gfx_TransparentSprite(chain_boots_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_chain_boots_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  287		}
;  288		else if (playerface == 2) {
	JR	L_148
L_126:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_124
;  289			gfx_TransparentSprite(chain_boots_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_chain_boots_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  290		}
;  291		else if (playerface == 3) {
	JR	L_148
L_124:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_122
;  292			gfx_TransparentSprite(chain_boots_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_chain_boots_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  293		}
;  294		else if (playerface == 4) {
	JR	L_148
L_122:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_148
;  295			gfx_TransparentSprite(chain_boots_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_chain_boots_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  296		}
;  297		}
;  298		else if (player_setup[0] = 3){
	JR	L_148
L_145:
	LD	A,3
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_143
;  299			if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_133
;  300			gfx_TransparentSprite(steel_boots_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_steel_boots_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  301		}
;  302		else if (playerface == 2) {
	JR	L_148
L_133:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_131
;  303			gfx_TransparentSprite(steel_boots_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_steel_boots_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  304		}
;  305		else if (playerface == 3) {
	JR	L_148
L_131:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_129
;  306			gfx_TransparentSprite(steel_boots_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_steel_boots_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  307		}
;  308		else if (playerface == 4) {
	JR	L_148
L_129:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_148
;  309			gfx_TransparentSprite(steel_boots_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_steel_boots_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  310		}
;  311		}
;  312		else if (player_setup[0] = 4){
	JR	L_148
L_143:
	LD	A,4
	LD	(_player_setup),A
	OR	A,A
	JR	Z,L_148
;  313		if (playerface == 1) {
	LD	BC,1
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_140
;  314			gfx_TransparentSprite(dragon_boots_left,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_dragon_boots_left_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  315		}
;  316		else if (playerface == 2) {
	JR	L_148
L_140:
	LD	BC,2
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_138
;  317			gfx_TransparentSprite(dragon_boots_up,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_dragon_boots_up_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  318		}
;  319		else if (playerface == 3) {
	JR	L_148
L_138:
	LD	BC,3
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_136
;  320			gfx_TransparentSprite(dragon_boots_right,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_dragon_boots_right_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  321		}
;  322		else if (playerface == 4) {
	JR	L_148
L_136:
	LD	BC,4
	LD	HL,(_playerface)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_148
;  323			gfx_TransparentSprite(dragon_boots_down,(x_offset/x_offset)+spritexoffset,(y_offset/y_offset) + spriteyoffset);
	LD	HL,(_y_offset)
	LD	BC,(_y_offset)
	CALL	__idivu
	LD	BC,(_x_offset)
	LD	DE,(_spriteyoffset)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(_x_offset)
	CALL	__idivu
	LD	BC,(_spritexoffset)
	ADD	HL,BC
	PUSH	HL
	LD	BC,_dragon_boots_down_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  324		}
;  325		}
;  326	}
L_148:
	RET	


;**************************** _drawboot ***************************
;Name                         Addr/Register   Size   Type
;_dragon_boots_down_data             IMPORT   1026   variable
;_dragon_boots_right_data            IMPORT   1026   variable
;_dragon_boots_up_data               IMPORT   1026   variable
;_dragon_boots_left_data             IMPORT   1026   variable
;_steel_boots_down_data              IMPORT   1026   variable
;_steel_boots_right_data             IMPORT   1026   variable
;_steel_boots_up_data                IMPORT   1026   variable
;_steel_boots_left_data              IMPORT   1026   variable
;_chain_boots_down_data              IMPORT   1026   variable
;_chain_boots_right_data             IMPORT   1026   variable
;_chain_boots_up_data                IMPORT   1026   variable
;_chain_boots_left_data              IMPORT   1026   variable
;_leather_boots_down_data            IMPORT   1026   variable
;_leather_boots_right_data           IMPORT   1026   variable
;_leather_boots_up_data              IMPORT   1026   variable
;_leather_boots_left_data            IMPORT   1026   variable
;_spritexoffset                      STATIC      3   variable
;_x_offset                           IMPORT      3   variable
;_spriteyoffset                      STATIC      3   variable
;_y_offset                           IMPORT      3   variable
;_gfx_TransparentSprite              IMPORT  -----   function
;_playerface                         STATIC      3   variable
;_player_setup                       IMPORT  unknown variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  327	
;  328	void drawplayerattack(void){}
_drawplayerattack:
	RET	


;**************************** _drawplayerattack ***************************
;Name                         Addr/Register   Size   Type


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  329	void drawenemies(void){}
_drawenemies:
	RET	


;**************************** _drawenemies ***************************
;Name                         Addr/Register   Size   Type


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


	XREF _tilemap:ROM
	XREF _player_setup:ROM
	XREF _mapshift:ROM
	XREF _mapstarty:ROM
	XREF _mapstartx:ROM
	XREF _y_offset:ROM
	XREF _x_offset:ROM
	XREF _textcolor:ROM
	XREF _menuyes:ROM
	XREF _gfx_TransparentSprite:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_PrintString:ROM
	XREF _gfx_PrintUInt:ROM
	XREF _gfx_SwapDraw:ROM
	XREF _gfx_SetDraw:ROM
	XREF _gfx_FillRectangle:ROM
	XREF _gfx_SetPalette:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_Tilemap:ROM
	XREF _tiles_gfx_pal:ROM
	XREF _dragon_boots_right_data:ROM
	XREF _dragon_boots_left_data:ROM
	XREF _dragon_boots_up_data:ROM
	XREF _dragon_boots_down_data:ROM
	XREF _steel_boots_right_data:ROM
	XREF _steel_boots_left_data:ROM
	XREF _steel_boots_up_data:ROM
	XREF _steel_boots_down_data:ROM
	XREF _chain_boots_right_data:ROM
	XREF _chain_boots_left_data:ROM
	XREF _chain_boots_up_data:ROM
	XREF _chain_boots_down_data:ROM
	XREF _leather_boots_right_data:ROM
	XREF _leather_boots_left_data:ROM
	XREF _leather_boots_up_data:ROM
	XREF _leather_boots_down_data:ROM
	XREF _dragon_chestplate_right_data:ROM
	XREF _dragon_chestplate_left_data:ROM
	XREF _dragon_chestplate_up_data:ROM
	XREF _dragon_chestplate_down_data:ROM
	XREF _steel_chestplate_right_data:ROM
	XREF _steel_chestplate_left_data:ROM
	XREF _steel_chestplate_up_data:ROM
	XREF _steel_chestplate_down_data:ROM
	XREF _chain_chestplate_right_data:ROM
	XREF _chain_chestplate_left_data:ROM
	XREF _chain_chestplate_up_data:ROM
	XREF _chain_chestplate_down_data:ROM
	XREF _leather_chestplate_right_data:ROM
	XREF _leather_chestplate_left_data:ROM
	XREF _leather_chestplate_up_data:ROM
	XREF _leather_chestplate_down_data:ROM
	XREF _dragon_helmet_right_data:ROM
	XREF _dragon_helmet_left_data:ROM
	XREF _dragon_helmet_up_data:ROM
	XREF _dragon_helmet_down_data:ROM
	XREF _steel_helmet_right_data:ROM
	XREF _steel_helmet_left_data:ROM
	XREF _steel_helmet_up_data:ROM
	XREF _steel_helmet_down_data:ROM
	XREF _chain_helmet_right_data:ROM
	XREF _chain_helmet_left_data:ROM
	XREF _chain_helmet_up_data:ROM
	XREF _chain_helmet_down_data:ROM
	XREF _leather_helmet_right_data:ROM
	XREF _leather_helmet_left_data:ROM
	XREF _leather_helmet_up_data:ROM
	XREF _leather_helmet_down_data:ROM
	XREF _player_naked_right_data:ROM
	XREF _player_naked_left_data:ROM
	XREF _player_naked_up_data:ROM
	XREF _player_naked_down_data:ROM
	XREF _collisionright:ROM
	XREF _collisionleft:ROM
	XREF _collisiondown:ROM
	XREF _collisionup:ROM
	XREF __idivu:ROM
	XDEF _drawenemies
	XDEF _drawplayerattack
	XDEF _drawboot
	XDEF _drawchestplate
	XDEF _drawhelmet
	XDEF _drawcharacter
	XDEF _mapshifter
	XDEF _drawmap
	XDEF _setmapshift
	XDEF _maingameloop
	XDEF _dumb
	XDEF _playerface
	XDEF _spriteyoffset
	XDEF _spritexoffset
	XDEF _godown
	XDEF _goup
	XDEF _goright
	XDEF _goleft
	END
